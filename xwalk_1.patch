commit 2d4303b3a071feca57c65f31f630951cbdb44984
Author: kanghua <jjykh@hotmail.com>
Date:   Sun Nov 11 11:39:18 2018 +0800

    optimization stage 1

diff --git a/BUILD.gn b/BUILD.gn
index 04003158..60af73b0 100644
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -115,8 +115,8 @@ source_set("xwalk_runtime") {
     "runtime/browser/android/scoped_allow_wait_for_legacy_web_view_api.h",
     "runtime/browser/android/state_serializer.cc",
     "runtime/browser/android/state_serializer.h",
-    "runtime/browser/android/xwalk_autofill_client_android.cc",
-    "runtime/browser/android/xwalk_autofill_client_android.h",
+    #"runtime/browser/android/xwalk_autofill_client_android.cc",
+    #"runtime/browser/android/xwalk_autofill_client_android.h",
     "runtime/browser/android/xwalk_content.cc",
     "runtime/browser/android/xwalk_content.h",
     "runtime/browser/android/xwalk_content_lifecycle_notifier.cc",
@@ -132,8 +132,8 @@ source_set("xwalk_runtime") {
     "runtime/browser/android/xwalk_cookie_access_policy.h",
     "runtime/browser/android/xwalk_dev_tools_server.cc",
     "runtime/browser/android/xwalk_dev_tools_server.h",
-    "runtime/browser/android/xwalk_form_database.cc",
-    "runtime/browser/android/xwalk_form_database.h",
+    #"runtime/browser/android/xwalk_form_database.cc",
+    #"runtime/browser/android/xwalk_form_database.h",
     "runtime/browser/android/xwalk_http_auth_handler.cc",
     "runtime/browser/android/xwalk_http_auth_handler.h",
     "runtime/browser/android/xwalk_http_auth_handler_base.cc",
@@ -228,10 +228,10 @@ source_set("xwalk_runtime") {
     "runtime/browser/xwalk_app_extension_bridge.h",
     "runtime/browser/xwalk_application_mac.h",
     "runtime/browser/xwalk_application_mac.mm",
-    "runtime/browser/xwalk_autofill_client.cc",
-    "runtime/browser/xwalk_autofill_client.h",
-    "runtime/browser/xwalk_autofill_manager.cc",
-    "runtime/browser/xwalk_autofill_manager.h",
+    #"runtime/browser/xwalk_autofill_client.cc",
+    #"runtime/browser/xwalk_autofill_client.h",
+    #"runtime/browser/xwalk_autofill_manager.cc",
+    #"runtime/browser/xwalk_autofill_manager.h",
     "runtime/browser/xwalk_browser_context.cc",
     "runtime/browser/xwalk_browser_context.h",
     "runtime/browser/xwalk_browser_main_parts.cc",
@@ -245,8 +245,8 @@ source_set("xwalk_runtime") {
     "runtime/browser/xwalk_content_browser_client.h",
     "runtime/browser/xwalk_content_settings.cc",
     "runtime/browser/xwalk_content_settings.h",
-    "runtime/browser/xwalk_form_database_service.cc",
-    "runtime/browser/xwalk_form_database_service.h",
+    #"runtime/browser/xwalk_form_database_service.cc",
+    #"runtime/browser/xwalk_form_database_service.h",
     "runtime/browser/xwalk_notification_manager_linux.cc",
     "runtime/browser/xwalk_notification_manager_linux.h",
     "runtime/browser/xwalk_notification_manager_win.cc",
@@ -363,17 +363,17 @@ source_set("xwalk_runtime") {
     "//base:i18n",
     "//base/third_party/dynamic_annotations",
     "//cc",
-    "//components/autofill/content/browser",
-    "//components/autofill/content/renderer",
-    "//components/autofill/core/browser",
-    "//components/cdm/renderer",
+    #"//components/autofill/content/browser",
+    #"//components/autofill/content/renderer",
+    #"//components/autofill/core/browser",
+    #"//components/cdm/renderer",
     "//components/devtools_http_handler",
-    "//components/resources:components_resources",
+    #"//components/resources:components_resources",
     "//components/strings",
     "//components/url_formatter",
-    "//components/user_prefs",
-    "//components/visitedlink/browser",
-    "//components/visitedlink/renderer",
+    #"//components/user_prefs",
+    #"//components/visitedlink/browser",
+    #"//components/visitedlink/renderer",
     "//content",
     "//content/public/app:both",
     "//content/public/browser",
diff --git a/runtime/android/core_internal/BUILD.gn b/runtime/android/core_internal/BUILD.gn
index 33e919e5..67c8c0d8 100644
--- a/runtime/android/core_internal/BUILD.gn
+++ b/runtime/android/core_internal/BUILD.gn
@@ -35,7 +35,7 @@ internal_java_files = [
   "src/org/xwalk/core/internal/XWalkResourceClientInternal.java",
   "src/org/xwalk/core/internal/XWalkSettingsInternal.java",
   "src/org/xwalk/core/internal/XWalkUIClientInternal.java",
-  "src/org/xwalk/core/internal/XWalkViewDatabaseInternal.java",
+  #"src/org/xwalk/core/internal/XWalkViewDatabaseInternal.java",
   "src/org/xwalk/core/internal/XWalkViewInternal.java",
   "src/org/xwalk/core/internal/XWalkWebResourceRequestHandlerInternal.java",
   "src/org/xwalk/core/internal/XWalkWebResourceRequestInternal.java",
@@ -68,7 +68,7 @@ android_library("xwalk_core_internal_java") {
     "src/org/xwalk/core/internal/SslUtil.java",
     "src/org/xwalk/core/internal/UrlUtilities.java",
     "src/org/xwalk/core/internal/XWalkAPI.java",
-    "src/org/xwalk/core/internal/XWalkAutofillClientAndroid.java",
+    #"src/org/xwalk/core/internal/XWalkAutofillClientAndroid.java",
     "src/org/xwalk/core/internal/XWalkClient.java",
     "src/org/xwalk/core/internal/XWalkContent.java",
     "src/org/xwalk/core/internal/XWalkContentLifecycleNotifier.java",
@@ -81,7 +81,7 @@ android_library("xwalk_core_internal_java") {
     "src/org/xwalk/core/internal/XWalkCoreBridge.java",
     "src/org/xwalk/core/internal/XWalkDevToolsServer.java",
     "src/org/xwalk/core/internal/XWalkDownloadListenerImpl.java",
-    "src/org/xwalk/core/internal/XWalkFormDatabase.java",
+    #"src/org/xwalk/core/internal/XWalkFormDatabase.java",
     "src/org/xwalk/core/internal/XWalkGeolocationPermissions.java",
     "src/org/xwalk/core/internal/XWalkInternalResources.java",
     "src/org/xwalk/core/internal/XWalkLaunchScreenManager.java",
@@ -183,14 +183,14 @@ generate_jni("xwalk_core_native_jni") {
   jni_package = "xwalk"
   sources = [
     "src/org/xwalk/core/internal/AndroidProtocolHandler.java",
-    "src/org/xwalk/core/internal/XWalkAutofillClientAndroid.java",
+    #"src/org/xwalk/core/internal/XWalkAutofillClientAndroid.java",
     "src/org/xwalk/core/internal/XWalkContent.java",
     "src/org/xwalk/core/internal/XWalkContentLifecycleNotifier.java",
     "src/org/xwalk/core/internal/XWalkContentsClientBridge.java",
     "src/org/xwalk/core/internal/XWalkContentsIoThreadClient.java",
     "src/org/xwalk/core/internal/XWalkCookieManagerInternal.java",
     "src/org/xwalk/core/internal/XWalkDevToolsServer.java",
-    "src/org/xwalk/core/internal/XWalkFormDatabase.java",
+    #"src/org/xwalk/core/internal/XWalkFormDatabase.java",
     "src/org/xwalk/core/internal/XWalkHttpAuthHandlerInternal.java",
     "src/org/xwalk/core/internal/XWalkPathHelper.java",
     "src/org/xwalk/core/internal/XWalkPresentationHost.java",
diff --git a/runtime/android/core_internal/src/org/xwalk/core/internal/XWalkContent.java b/runtime/android/core_internal/src/org/xwalk/core/internal/XWalkContent.java
index 7b018c55..abed82ec 100644
--- a/runtime/android/core_internal/src/org/xwalk/core/internal/XWalkContent.java
+++ b/runtime/android/core_internal/src/org/xwalk/core/internal/XWalkContent.java
@@ -87,7 +87,7 @@ class XWalkContent implements XWalkPreferencesInternal.KeyValueChangeListener {
     private WebContents mWebContents;
     private boolean mIsLoaded = false;
     private boolean mAnimated = false;
-    private XWalkAutofillClientAndroid mXWalkAutofillClient;
+    //private XWalkAutofillClientAndroid mXWalkAutofillClient;
     private XWalkGetBitmapCallbackInternal mXWalkGetBitmapCallbackInternal;
     private ContentBitmapCallback mGetBitmapCallback;
     private final HitTestData mPossiblyStaleHitTestData = new HitTestData();
@@ -1052,9 +1052,9 @@ class XWalkContent implements XWalkPreferencesInternal.KeyValueChangeListener {
             return;
         }
 
-        if (mXWalkAutofillClient != null) {
-            mXWalkAutofillClient.hideAutofillPopup();
-        }
+        // if (mXWalkAutofillClient != null) {
+        //     mXWalkAutofillClient.hideAutofillPopup();
+        // }
     }
 
     // It is only used for SurfaceView.
@@ -1064,11 +1064,11 @@ class XWalkContent implements XWalkPreferencesInternal.KeyValueChangeListener {
         surfaceView.setVisibility(visibility);
     }
 
-    @CalledByNative
-    private void setXWalkAutofillClient(XWalkAutofillClientAndroid client) {
-        mXWalkAutofillClient = client;
-        client.init(mContentViewCore);
-    }
+    // @CalledByNative
+    // private void setXWalkAutofillClient(XWalkAutofillClientAndroid client) {
+    //     mXWalkAutofillClient = client;
+    //     client.init(mContentViewCore);
+    // }
 
     public void clearSslPreferences() {
         if (mNativeContent == 0) return;
diff --git a/runtime/android/core_internal/src/org/xwalk/core/internal/XWalkSettingsInternal.java b/runtime/android/core_internal/src/org/xwalk/core/internal/XWalkSettingsInternal.java
index 5b1af0d8..8f77a977 100644
--- a/runtime/android/core_internal/src/org/xwalk/core/internal/XWalkSettingsInternal.java
+++ b/runtime/android/core_internal/src/org/xwalk/core/internal/XWalkSettingsInternal.java
@@ -1041,12 +1041,6 @@ public class XWalkSettingsInternal {
         }
     }
 
-    @CalledByNative
-    private String getAcceptLanguagesLocked() {
-        assert Thread.holdsLock(mXWalkSettingsLock);
-        return mAcceptLanguages;
-    }
-
     @CalledByNative
     private boolean getSaveFormDataLocked() {
         assert Thread.holdsLock(mXWalkSettingsLock);
diff --git a/runtime/app/android/BUILD.gn b/runtime/app/android/BUILD.gn
index d75fa523..cf8bdfd3 100644
--- a/runtime/app/android/BUILD.gn
+++ b/runtime/app/android/BUILD.gn
@@ -13,8 +13,6 @@ shared_library("libxwalkcore") {
     "//components/cdm/browser",
     "//components/cdm/renderer",
     "//components/navigation_interception",
-    "//components/visitedlink/browser",
-    "//components/visitedlink/renderer",
     "//components/web_contents_delegate_android",
     "//mojo/public/cpp/bindings",
     "//skia",
diff --git a/runtime/app/android/xwalk_jni_registrar.cc b/runtime/app/android/xwalk_jni_registrar.cc
index 941ed98d..db3df520 100644
--- a/runtime/app/android/xwalk_jni_registrar.cc
+++ b/runtime/app/android/xwalk_jni_registrar.cc
@@ -41,7 +41,7 @@ static base::android::RegistrationMethod kXWalkRegisteredMethods[] = {
   { "NetAndroid", net::android::RegisterJni },
   { "WebContentsDelegateAndroid",
       web_contents_delegate_android::RegisterWebContentsDelegateAndroidJni },
-  { "XWalkAutofillClient", RegisterXWalkAutofillClient },
+  //{ "XWalkAutofillClient", RegisterXWalkAutofillClient },
   { "XWalkContentsClientBridge", RegisterXWalkContentsClientBridge },
   { "XWalkContentsIoThreadClientImpl",
       RegisterXWalkContentsIoThreadClientImpl },
@@ -55,7 +55,7 @@ static base::android::RegistrationMethod kXWalkRegisteredMethods[] = {
       extensions::RegisterXWalkNativeExtensionLoaderAndroid },
   { "XWalkPathHelper", RegisterXWalkPathHelper },
   { "XWalkSettings", RegisterXWalkSettings },
-  { "XWalkFormDatabase", RegisterXWalkFormDatabase },
+  //{ "XWalkFormDatabase", RegisterXWalkFormDatabase },
   { "XWalkViewDelegate", RegisterXWalkViewDelegate },
   { "XWalkWebContentsDelegate", RegisterXWalkWebContentsDelegate },
   { "XWalkWebResourceResponseImpl", RegisterXWalkWebResourceResponse },
diff --git a/runtime/browser/android/xwalk_content.cc b/runtime/browser/android/xwalk_content.cc
index 7ec20ca2..5355770e 100644
--- a/runtime/browser/android/xwalk_content.cc
+++ b/runtime/browser/android/xwalk_content.cc
@@ -137,26 +137,19 @@ XWalkContent* XWalkContent::FromWebContents(
 
 XWalkContent::XWalkContent(std::unique_ptr<content::WebContents> web_contents)
     : web_contents_(std::move(web_contents)) {
-  xwalk_autofill_manager_.reset(new XWalkAutofillManager(web_contents_.get()));
   XWalkContentLifecycleNotifier::OnXWalkViewCreated();
 }
 
 void XWalkContent::SetXWalkAutofillClient(jobject client) {
   DCHECK(BrowserThread::CurrentlyOn(BrowserThread::UI));
-  JNIEnv* env = AttachCurrentThread();
-  ScopedJavaLocalRef<jobject> obj = java_ref_.get(env);
-  if (obj.is_null()) return;
-  Java_XWalkContent_setXWalkAutofillClient(env, obj.obj(), client);
+  // JNIEnv* env = AttachCurrentThread();
+  // ScopedJavaLocalRef<jobject> obj = java_ref_.get(env);
+  // if (obj.is_null()) return;
+  // Java_XWalkContent_setXWalkAutofillClient(env, obj.obj(), client);
 }
 
 void XWalkContent::SetSaveFormData(bool enabled) {
   DCHECK(BrowserThread::CurrentlyOn(BrowserThread::UI));
-  xwalk_autofill_manager_->InitAutofillIfNecessary(enabled);
-  // We need to check for the existence, since autofill_manager_delegate
-  // may not be created when the setting is false.
-  if (auto client =
-      XWalkAutofillClientAndroid::FromWebContents(web_contents_.get()))
-    client->SetSaveFormData(enabled);
 }
 
 XWalkContent::~XWalkContent() {
diff --git a/runtime/browser/android/xwalk_content.h b/runtime/browser/android/xwalk_content.h
index 15734d7c..8a0dab55 100644
--- a/runtime/browser/android/xwalk_content.h
+++ b/runtime/browser/android/xwalk_content.h
@@ -123,7 +123,6 @@ class XWalkContent : public FindHelper::Listener {
   std::unique_ptr<XWalkWebContentsDelegate> web_contents_delegate_;
   std::unique_ptr<XWalkRenderViewHostExt> render_view_host_ext_;
   std::unique_ptr<XWalkContentsClientBridge> contents_client_bridge_;
-  std::unique_ptr<XWalkAutofillManager> xwalk_autofill_manager_;
   std::unique_ptr<content::WebContents> web_contents_;
   std::unique_ptr<XWalkContent> pending_contents_;
   std::unique_ptr<FindHelper> find_helper_;
diff --git a/runtime/browser/android/xwalk_settings.cc b/runtime/browser/android/xwalk_settings.cc
index dd15cf2b..c428452c 100644
--- a/runtime/browser/android/xwalk_settings.cc
+++ b/runtime/browser/android/xwalk_settings.cc
@@ -305,17 +305,8 @@ void XWalkSettings::RenderViewCreated(
 }
 
 void XWalkSettings::UpdateAcceptLanguages(JNIEnv* env, jobject obj) {
-  PrefService* pref_service = GetPrefs();
-  if (!pref_service) return;
-  pref_service->SetString(
-      "intl.accept_languages",
-      base::android::ConvertJavaStringToUTF8(
-          Java_XWalkSettingsInternal_getAcceptLanguagesLocked(env, obj)));
 }
 
-PrefService* XWalkSettings::GetPrefs() {
-  return user_prefs::UserPrefs::Get(XWalkBrowserContext::GetDefault());
-}
 
 static jlong Init(JNIEnv* env,
                  const JavaParamRef<jobject>& obj,
diff --git a/runtime/browser/android/xwalk_settings.h b/runtime/browser/android/xwalk_settings.h
index b249d539..5de5a42e 100644
--- a/runtime/browser/android/xwalk_settings.h
+++ b/runtime/browser/android/xwalk_settings.h
@@ -39,7 +39,6 @@ class XWalkSettings : public content::WebContentsObserver {
   XWalkRenderViewHostExt* GetXWalkRenderViewHostExt();
   void UpdateEverything();
   void UpdatePreferredSizeMode();
-  PrefService* GetPrefs();
 
   // WebContentsObserver overrides:
   void RenderViewCreated(
diff --git a/runtime/browser/runtime.cc b/runtime/browser/runtime.cc
index 0ea96308..f2e23240 100644
--- a/runtime/browser/runtime.cc
+++ b/runtime/browser/runtime.cc
@@ -69,11 +69,6 @@ Runtime::Runtime(content::WebContents* web_contents)
       observer_(nullptr),
       weak_ptr_factory_(this) {
   web_contents_->SetDelegate(this);
-#if !defined(OS_ANDROID)
-  if (XWalkBrowserContext::GetDefault()->save_form_data())
-    xwalk_autofill_manager_.reset(
-        new XWalkAutofillManager(web_contents_.get()));
-#endif
 }
 
 Runtime::~Runtime() {
diff --git a/runtime/browser/runtime.h b/runtime/browser/runtime.h
index 09fdbceb..2bda65e5 100644
--- a/runtime/browser/runtime.h
+++ b/runtime/browser/runtime.h
@@ -187,9 +187,6 @@ class Runtime : public content::WebContentsDelegate,
   base::ThreadChecker thread_checker_;
 
   std::unique_ptr<content::WebContents> web_contents_;
-#if !defined(OS_ANDROID)
-  std::unique_ptr<XWalkAutofillManager> xwalk_autofill_manager_;
-#endif
 
   gfx::Image app_icon_;
 
diff --git a/runtime/browser/xwalk_browser_context.cc b/runtime/browser/xwalk_browser_context.cc
index a74d74f0..e59f8d80 100644
--- a/runtime/browser/xwalk_browser_context.cc
+++ b/runtime/browser/xwalk_browser_context.cc
@@ -92,8 +92,6 @@ XWalkBrowserContext::XWalkBrowserContext()
     : resource_context_(new RuntimeResourceContext),
     save_form_data_(true) {
   InitWhileIOAllowed();
-  InitFormDatabaseService();
-  InitVisitedLinkMaster();
   CHECK(!g_browser_context);
   g_browser_context = this;
 }
@@ -340,10 +338,6 @@ XWalkBrowserContext::CreateMediaRequestContextForStoragePartition(
 #endif
 }
 
-XWalkFormDatabaseService* XWalkBrowserContext::GetFormDatabaseService() {
-  return form_database_service_.get();
-}
-
 // Create user pref service for autofill functionality.
 void XWalkBrowserContext::CreateUserPrefServiceIfNecessary() {
   if (user_pref_service_) return;
@@ -371,16 +365,6 @@ void XWalkBrowserContext::UpdateAcceptLanguages(
     url_request_getter_->UpdateAcceptLanguages(accept_languages);
 }
 
-void XWalkBrowserContext::InitFormDatabaseService() {
-  base::FilePath user_data_dir;
-#if defined(OS_ANDROID)
-  CHECK(PathService::Get(base::DIR_ANDROID_APP_DATA, &user_data_dir));
-#elif defined(OS_WIN)
-  CHECK(PathService::Get(base::DIR_APP_DATA, &user_data_dir));
-#endif
-  form_database_service_.reset(new XWalkFormDatabaseService(user_data_dir));
-}
-
 #if defined(OS_ANDROID)
 void XWalkBrowserContext::SetCSPString(const std::string& csp) {
   // Check format of csp string.
@@ -401,15 +385,7 @@ std::string XWalkBrowserContext::GetCSPString() const {
 }
 #endif
 
-void XWalkBrowserContext::InitVisitedLinkMaster() {
-  visitedlink_master_.reset(
-      new visitedlink::VisitedLinkMaster(this, this, false));
-  visitedlink_master_->Init();
-}
-
 void XWalkBrowserContext::AddVisitedURLs(const std::vector<GURL>& urls) {
-  DCHECK(visitedlink_master_.get());
-  visitedlink_master_->AddURLs(urls);
 }
 
 void XWalkBrowserContext::RebuildTable(
diff --git a/runtime/browser/xwalk_browser_context.h b/runtime/browser/xwalk_browser_context.h
index 500fa6f5..df3796f7 100644
--- a/runtime/browser/xwalk_browser_context.h
+++ b/runtime/browser/xwalk_browser_context.h
@@ -92,8 +92,6 @@ class XWalkBrowserContext
 
   RuntimeURLRequestContextGetter* GetURLRequestContextGetterById(
       const std::string& pkg_id);
-  void InitFormDatabaseService();
-  XWalkFormDatabaseService* GetFormDatabaseService();
   void CreateUserPrefServiceIfNecessary();
   void UpdateAcceptLanguages(const std::string& accept_languages);
   void set_save_form_data(bool enable) { save_form_data_ = enable; }
@@ -126,20 +124,15 @@ class XWalkBrowserContext
   // allowed on the current thread.
   void InitWhileIOAllowed();
 
-  // Reset visitedlink master and initialize it.
-  void InitVisitedLinkMaster();
-
   application::ApplicationService* application_service_;
   std::unique_ptr<RuntimeResourceContext> resource_context_;
   scoped_refptr<RuntimeDownloadManagerDelegate> download_manager_delegate_;
   scoped_refptr<RuntimeURLRequestContextGetter> url_request_getter_;
   std::unique_ptr<PrefService> user_pref_service_;
-  std::unique_ptr<XWalkFormDatabaseService> form_database_service_;
   bool save_form_data_;
 #if defined(OS_ANDROID)
   std::string csp_;
 #endif
-  std::unique_ptr<visitedlink::VisitedLinkMaster> visitedlink_master_;
 
   typedef std::map<base::FilePath::StringType,
       scoped_refptr<RuntimeURLRequestContextGetter> >
diff --git a/runtime/browser/xwalk_browser_main_parts.cc b/runtime/browser/xwalk_browser_main_parts.cc
index fa38cded..0996b83a 100644
--- a/runtime/browser/xwalk_browser_main_parts.cc
+++ b/runtime/browser/xwalk_browser_main_parts.cc
@@ -123,14 +123,10 @@ void XWalkBrowserMainParts::PreMainMessageLoopStart() {
   // FIXME: Add comment why this is needed on Android.
   command_line->AppendSwitch(switches::kAllowFileAccessFromFiles);
 
-  // Enable SIMD.JS API by default.
-  std::string js_flags("--harmony-simd");
   if (command_line->HasSwitch(switches::kJavaScriptFlags)) {
-    js_flags += " ";
-    js_flags +=
-        command_line->GetSwitchValueASCII(switches::kJavaScriptFlags);
+    std::string js_flags = command_line->GetSwitchValueASCII(switches::kJavaScriptFlags);
+    command_line->AppendSwitchASCII(switches::kJavaScriptFlags, js_flags);
   }
-  command_line->AppendSwitchASCII(switches::kJavaScriptFlags, js_flags);
   startup_url_ = GetURLFromCommandLine(*command_line);
 }
 
diff --git a/runtime/renderer/xwalk_content_renderer_client.cc b/runtime/renderer/xwalk_content_renderer_client.cc
index dbd8846d..0ff81eb3 100644
--- a/runtime/renderer/xwalk_content_renderer_client.cc
+++ b/runtime/renderer/xwalk_content_renderer_client.cc
@@ -7,9 +7,6 @@
 
 #include "base/command_line.h"
 #include "base/strings/utf_string_conversions.h"
-#include "components/autofill/content/renderer/autofill_agent.h"
-#include "components/autofill/content/renderer/password_autofill_agent.h"
-#include "components/visitedlink/renderer/visitedlink_slave.h"
 #include "content/public/renderer/render_frame.h"
 #include "content/public/renderer/render_frame_observer.h"
 #include "content/public/renderer/render_frame_observer_tracker.h"
@@ -110,8 +107,6 @@ void XWalkContentRendererClient::RenderThreadStarted() {
   content::RenderThread* thread = content::RenderThread::Get();
   xwalk_render_thread_observer_.reset(new XWalkRenderThreadObserver);
   thread->AddObserver(xwalk_render_thread_observer_.get());
-  visited_link_slave_.reset(new visitedlink::VisitedLinkSlave);
-  thread->AddObserver(visited_link_slave_.get());
 
   base::CommandLine* cmd_line = base::CommandLine::ForCurrentProcess();
   if (!cmd_line->HasSwitch(switches::kXWalkDisableExtensions))
@@ -214,11 +209,6 @@ void XWalkContentRendererClient::RenderFrameCreated(
         parent_frame->GetRoutingID(), render_frame->GetRoutingID()));
   }
 #endif
-  // TODO(sgurun) do not create a password autofill agent (change
-  // autofill agent to store a weakptr).
-  autofill::PasswordAutofillAgent* password_autofill_agent =
-      new autofill::PasswordAutofillAgent(render_frame);
-  new autofill::AutofillAgent(render_frame, password_autofill_agent, nullptr);
 }
 
 void XWalkContentRendererClient::RenderViewCreated(
@@ -252,15 +242,6 @@ bool XWalkContentRendererClient::IsExternalPepperPlugin(
   return module_name == "Native Client";
 }
 
-unsigned long long XWalkContentRendererClient::VisitedLinkHash(
-    const char* canonical_url, size_t length) {
-  return visited_link_slave_->ComputeURLFingerprint(canonical_url, length);
-}
-
-bool XWalkContentRendererClient::IsLinkVisited(unsigned long long link_hash) {
-  return visited_link_slave_->IsVisited(link_hash);
-}
-
 bool XWalkContentRendererClient::WillSendRequest(blink::WebFrame* frame,
                      ui::PageTransition transition_type,
                      const GURL& url,
diff --git a/runtime/renderer/xwalk_content_renderer_client.h b/runtime/renderer/xwalk_content_renderer_client.h
index c4a9c30a..bfa9c39e 100644
--- a/runtime/renderer/xwalk_content_renderer_client.h
+++ b/runtime/renderer/xwalk_content_renderer_client.h
@@ -22,10 +22,6 @@
 #include "xwalk/runtime/renderer/xwalk_render_thread_observer_generic.h"
 #endif
 
-namespace visitedlink {
-class VisitedLinkSlave;
-}
-
 namespace xwalk {
 
 class XWalkRenderThreadObserver;
@@ -46,9 +42,6 @@ class XWalkContentRendererClient
   void RenderFrameCreated(content::RenderFrame* render_frame) override;
   void RenderViewCreated(content::RenderView* render_view) override;
   bool IsExternalPepperPlugin(const std::string& module_name) override;
-  unsigned long long VisitedLinkHash(const char* canonical_url,
-                                     size_t length) override;
-  bool IsLinkVisited(unsigned long long link_hash) override;
 
   bool WillSendRequest(blink::WebFrame* frame,
                        ui::PageTransition transition_type,
@@ -81,8 +74,6 @@ class XWalkContentRendererClient
   std::unique_ptr<extensions::XWalkExtensionRendererController>
       extension_controller_;
 
-  std::unique_ptr<visitedlink::VisitedLinkSlave> visited_link_slave_;
-
   void GetNavigationErrorStrings(
       content::RenderFrame* render_frame,
       const blink::WebURLRequest& failed_request,
diff --git a/tools/reflection_generator/reflection_generator.py b/tools/reflection_generator/reflection_generator.py
index 4ae73692..31e1e7e8 100755
--- a/tools/reflection_generator/reflection_generator.py
+++ b/tools/reflection_generator/reflection_generator.py
@@ -52,7 +52,7 @@ CLASSES_TO_PROCESS = [
     'XWalkUIClientInternal',
     'XWalkHitTestResultInternal',
     'XWalkViewInternal',
-    'XWalkViewDatabaseInternal',
+    #'XWalkViewDatabaseInternal',
     'XWalkWebResourceRequestHandlerInternal',
     'XWalkWebResourceRequestInternal',
     'XWalkWebResourceResponseInternal',
diff --git a/xwalk_android.gypi b/xwalk_android.gypi
index 06971dd9..a1c2e4bb 100644
--- a/xwalk_android.gypi
+++ b/xwalk_android.gypi
@@ -13,8 +13,6 @@
         '../components/components.gyp:cdm_browser',
         '../components/components.gyp:cdm_renderer',
         '../components/components.gyp:navigation_interception',
-        '../components/components.gyp:visitedlink_browser',
-        '../components/components.gyp:visitedlink_renderer',
         '../components/components.gyp:web_contents_delegate_android',
         '../skia/skia.gyp:skia',
         '../mojo/mojo_public.gyp:mojo_cpp_bindings',
@@ -178,7 +176,7 @@
       },
       'sources': [
         'runtime/android/core_internal/src/org/xwalk/core/internal/AndroidProtocolHandler.java',
-        'runtime/android/core_internal/src/org/xwalk/core/internal/XWalkAutofillClientAndroid.java',
+        #'runtime/android/core_internal/src/org/xwalk/core/internal/XWalkAutofillClientAndroid.java',
         'runtime/android/core_internal/src/org/xwalk/core/internal/XWalkContent.java',
         'runtime/android/core_internal/src/org/xwalk/core/internal/XWalkContentLifecycleNotifier.java',
         'runtime/android/core_internal/src/org/xwalk/core/internal/XWalkContentsClientBridge.java',
